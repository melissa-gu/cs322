

Author:  Melissa Gu

         1         2         3         4         5         6         7         8
12345678901234567890123456789012345678901234567890123456789012345678901234567890

Traffic Flow Simulator: Requirements Document
1. Background
   In a world where autonomous, or driverless, vehicles are becoming more likely 
   by the day, precautions must be taken to ensure that such vehicles can 
   navigate the roads safely, especially in light of recent events in which 
   (non-autonomous) vehicles have been hacked, or taken over, without the 
   driver's control. The client plans to use the software to model traffic flow 
   within a city, where the simulated vehicles behave like autonomous vehicles 
   that do not send and receive signals, thus keeping them safe from the 
   possibility of being hacked, or taken over by outside parties. The client 
   also wants to use the software to learn more about where congestion occurs, 
   and whether that suggests that certain traffic control mechanisms such as
   traffic lights or stop signs are needed at certain intersections.
2. Description of Software
   The goal of the software is to model the flow of traffic in a city
   according to various inputs given by the user. The software should display
   the simulation through a GUI. Ultimately, the software should output the 
   average amount of time it takes a vehicle to cross through the simulated 
   city. The software should also output information about what is happening 
   within the simulation at each simulated time interval, such as the 
   locations of cars and what directions those cars are traveling, if the user
   specifies that such information should be displayed. At each intersection,
   vehicles will access information about other vehicles near the intersection 
   and follow specified rules to determine which vehicle or vehicles can proceed
   through the intersection and in what order. 
3. Environmental Characteristics
   (You need put nothing in this section at this time, but have such a
   section heading; the section might eventually describe such things as the 
   operating system that could be used, the version of compilers used, etc.)
4. Simulation Characteristics
   4.1 Geographic layout
       4.1.1 The city section is a grid of intersecting north-south two-way 
             streets east-west two-way streets. The number of streets desired is 
             specified as input to the software.
       etc.
   4.2 Traffic control devices
       4.2.1 Intersections controlled by rules rather than control devices
             4.2.1.1 Multiple cars can proceed through the intersection if their
                     paths do not intersect. This can occur in the following 
                     ways:
                     4.2.1.1.1 One car is traveling straight and another is 
                               approaching the intersection in the opposite 
                               direction, intending to turn right.
                     4.2.1.1.2 One car is turning right and another is 
                               approaching the intersection in the opposite 
                               direction, also intending to turn right.
                     4.2.1.1.3 One car is turning right and another is 
                               approaching the intersection in the opposite 
                               direction, also intending to turn right.
                     4.2.1.1.4 One car is is approaching the intersection, 
                               intending to go straight. Another car is 
                               approaching the intersection in the opposite 
                               direction, intending to turn right. A third car
                               is approaching the intersection from the
                               direction the second car is intending to turn 
                               towards, and is also intending to turn right.
             4.2.1.2 Only one car can proceed through the intersection if the 
                     cars approaching the intersection have paths that will
                     intersect. This can occur when more than one car is
                     approaching the intersection, and their paths are not 
                     as described in any of the situations in 4.2.1.1
             4.2.1.3 Cars behind cars approaching the intersection must stop 
                     before they occupy the same segment as another car in
                     front of them.
             4.2.1.4 PRIORITY 

         1         2         3         4         5         6         7         8
12345678901234567890123456789012345678901234567890123456789012345678901234567890

       4.2.2 Stop signs at intersections
             (don't put anything in this section for now, but have its heading)
       4.2.3 Traffic lights at intersections
             (don't put anything in this section for now, but have its heading)
       4.2.4 Sensors at intersections
             (don't put anything in this section for now, but have its heading)
       4.2.5 Implicit control devices at entrance to city section
             (don't put anything in this section for now, but have its heading)
       ...
       4.4.??
   4.3 Traffic flow 
       4.3.1 Speed of traffic
             4.3.1.1 All cars travel at the same speed.
             That speed is given by timeToTraverseSegment.
       4.3.2 Patterns of traffic flow
             (don't try to do at all before the deadline on Fri Sep 21; 
             eventually don't say something vague like "six or seven traffic 
             patterns will define the traffic flow", instead describe -- 
             using *separate* outline numbering for each such pattern
             -- all the traffic flow patterns that exist in the simulation and 
             thus are available to the user; you need not mention the various
             specific places where a car could actually make a turn)
        etc.
   4.4 Stochastic properties
       (describe the role of random numbers in the simulation)
   ...
   4.?? Additional assumptions
5. Input/Output
   (specific description of input and output formats and how the
   client will provide input and receive output; client has already indicated 
   whether he wants a graphical view and/or GUI input and output to the overall 
   software.)
6. Life Cycle Considerations
   6.1 Subsets
       6.1.1 (describe the first deliverable)
       6.1.2 (describe the second deliverable)
       ...
       6.1.5 (describe the deliverable on Wed, October 31, 2016)
   6.2 Possible extensions
       (number and list the ways the software can be extended after Oct 31, in 
       view of the client's longer-term needs)
   ...
   6.??
7. Glossary
   7.1 A "simulation" is a model or imitation of a real world process or 
       environment.
   7.2 A "GUI", or a graphic user interface, is a display that allows the user 
       to view graphical icons and visual indicators rather than just text.    
   7.3 An "average", which in this software is used in the context of the 
       average time it takes a car to cross through the entire simulated city,
       is calculated by summing up the values for the time for each car in the 
       simulation and dividing by the number of cars.
   7.4 A "direction" is exactly one of the following: N, W, S, E.
       Those letters abbreviate North, West, South, East, respectively.
   7.5 A "section" is the portion of a street between two adjacent 
       intersections.  
   7.6 Each section consists of exactly two segments that aim in opposite
       directions from each other.
   7.7 A "segment" is the portion of a section going in a single direction.
       It can also refer to one of the four portions of the intersection.
   7.8 An "intersection" is where a N/S and an E/W facing road intersect.
   7.9 A car that is "approaching the intersection" is a car that is in the 
       section of road directly before the intersection.
   7.10 An "entry point" refers to one of the segments at the edges of the 
        simulated city where cars might enter
   7.11 An "exit point" refers to one of the segments at the edges of the 
        simulated city where cars might exit
   7.12 The "position" of a vehicle is the (x,y) coordinate of the segment the
        vehicle occupies.

8. Names of values.  (Below is at least a partial chart you can use.)

  name of value           intended meaning
  ---------------------   -----------------------------------------------------
  timeToTraverseSegment   time in time-units for one car to traverse one segment
  maxSegmentCapacity      maximum num of cars in one segment 
  newVehicleProbability   the probability of a new car arriving at each entry 
                          point
  numberOfIntersections   the number of intersections in the simulated city
  entryPoint              the segment through which a vehicle enters the 
                          simulation
  exitPoint               the segment through which a vehicle exits the 
                          simulation
  intendedDirection       direction the car will proceed in the intersection
  goStraight              value for intendedDirection for a car traveling 
                          straight
  turnRight               value for intendedDirection for a car turning right
  turnLeft                value for intendedDirection for a car turning left
  timeTraveled            value associated with each vehicle that represents the
                          amount of time the vehicle has traveled within the
                          city
  ...

         1         2         3         4         5         6         7         8
12345678901234567890123456789012345678901234567890123456789012345678901234567890

9. Questions to ask client.
   9.1 Exactly what type of visualization or GUI do you want?
   9.2 In the duration of the simulation where no car has made it across the 
       simulated city, what would you like the printout for the average time
       to cross through the city to display?
   9.3 You mentioned wanting to know "where gridlock happens". What would you 
       consider to be gridlock, and what would be normal flow of traffic?
   9.4 Will the inputs specify, for each intersection, the type of traffic 
       control device?
   9.5 When the path for a vehicle requires multiple direction changes, how will
       these direction changes be specified?
       9.5.1 If vehicles are continuously generated throughout the duration of
             the simulation, how are the inputs for new vehicles specified?
   9.6 Is there an input for duration of the simulation?
   9.7 If a vehicle is turning left, and another vehicle is approaching the 
       intersection in the opposite direction, intending to travel straight,
       can the vehicle that is traveling straight enter the intersection while
       the turning car is also in the intersection, as long as they don't occupy
       the same segment within the intersection?
   9.8 Will the entry and exit points for the vehicles be specified, or randomly
       generated? 

