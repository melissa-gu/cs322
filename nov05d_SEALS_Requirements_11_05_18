

Authors: SEALS (Jessica, Melissa, Tracy, Will)

         1         2         3         4         5         6         7         8
12345678901234567890123456789012345678901234567890123456789012345678901234567890

Traffic Flow Simulator: Requirements Document
1. Background
   Self-Driving cars are quickly becoming more proficient. Some predict that in
   the coming years self-driving cars will be common, transforming how people
   travel. It's important for research to determine both the efficiency and the
   safety of autonomous cars. Hackers have found ways to control cars from
   outside a car by sending the car signals. One possible solution is to
   program the cars to use visual cues from other cars and to eliminate the need
   for wireless communication, preventing such hacking.
2. Description of Software
   This software will simulate autonomous cars as they travel through a city
   represented as a Grid of intersections and sections, where sections are 
   composed of two segments in opposite directions, and intersections and 
   segments are further divided into slots. The software will not include a GUI 
   or virtual reality goggles, because the time and monetary cost needed to 
   implement would not be feasible. The software will take input that
   specifies simulation parameters: the size of the Grid of streets and
   approximate rate of entry and location of entry and exit of each car. This
   input will be given either through the command line or a file. The software
   will generate new cars as the simulation proceeds, model how cars proceed 
   through intersections, and output the average amount of time a car takes to 
   exit the city.

3. Environmental Characteristics
   (You need put nothing in this section at this time, but have such a
   section heading; the section might eventually describe such things as the
   operating system that could be used, the version of compilers used, etc.)
4. Simulation Characteristics
   4.1 Geographic layout
       4.1.1 The city section is a Grid of up to 20 north-south two-way streets
             and east-west two-way streets. The number of streets of each
             direction is determined by input to the program.
       etc.
   4.2 Traffic control devices
       4.2.1 Intersections controlled by rules rather than control devices
             4.2.1.1 No car can occupy the same slot as any other car.
             4.2.1.2 When cars approaching an intersection have paths that will
                     intersect in the intersection, priority for the order of
                     entering the intersection is given in the following order:
                     - Cars proceeding straight
                     - Cars turning right
                     - Cars turning left
                     4.2.1.2.1 If such cars with intersecting paths have the
                               same priority according to the above rules,
                               priority is given in the following order:
                               - Cars traveling Southward
                               - Cars traveling Eastward
                               - Cars traveling Northward
                               - Cars traveling Westward
             4.2.1.3 Any car in the intersection has priority over cars that
                     are not in the intersection.
             4.2.1.4 Consider the case in which two cars plan to exit the
                     intersection in the same direction. Let us refer to these 
                     cars as car A and car B. Assume that car A is already in 
                     the intersection, and car B is not. Car B will wait until 
                     car A has fully exited the intersection, and moved beyond 
                     the slot adjacent to the intersection, before car B will 
                     proceed.
             4.2.1.5 In certain conditions, cars will have paths that don't
                     intersect, and will proceed through intersection
                     simultaneously. These conditions are specified
                     as follows:
                     4.2.1.5.1 Cars are approaching traveling opposite 
                               directions and:
                               - Both cars are proceeding straight
                               - Both cars are turning right
                               - One car is proceeding straight, and one car is
                                 turning right
                     4.2.1.5.2 Cars are approaching perpendicular to one another
                               and:
                               - Both cars are turning right
                               or:
                               4.2.1.5.2.1 One car is coming from N, and one car
                                           is coming from E and:
                                           - The car from E is turning right
                                             and the car from N is proceeding
                                             straight
                                           - The car from E is turning right
                                             and the car from N is turning
                                             left
                               4.2.1.5.2.2 One car is coming from N, and one car
                                           is coming from W and:
                                           - The car from N is turning right
                                             and the car from W is proceeding
                                             straight
                                           - The car from N is turning right
                                             and the car from W is turning
                                             left
                               4.2.1.5.2.3 One car is coming from S, and one car
                                           is coming from E and:
                                           - The car from S is turning right
                                             and the car from E is proceeding
                                             straight
                                           - The car from S is turning right
                                             and the car from E is turning
                                             left
                               4.2.1.5.2.4 One car is coming from S, and one car
                                           is coming from W and:
                                           - The car from W is turning right
                                             and the car from S is proceeding
                                             straight
                                           - The car from W is turning right
                                             and the car from S is turning
                                             left

                     4.2.1.5.3 Three cars are approaching the intersection and:
                               - All three cars are turning right
                               or:
                               4.2.1.5.3.1 One car is coming from N, and two
                                           cars are coming from S and E, 
                                           respectively, and:
                                           - The car from N is proceeding
                                             straight
                                           - The cars from S and E are turning
                                             right
                               4.2.1.5.3.2 One car is coming from S, and two
                                           cars are coming from N and W,
                                           respectively, and:
                                           - The car from S is proceeding
                                             straight
                                           - The cars from N and W are turning
                               4.2.1.5.3.3 One car is coming from E, and two
                                           cars are coming from W and S, 
                                           respectively, and:
                                           - The car from E is proceeding
                                             straight
                                           - The cars from W and S are turning
                                             right
                               4.2.1.5.3.4 One car is coming from W, and two
                                           cars are coming from N and E, 
                                           respectively, and:
                                           - The car from W is proceeding
                                             straight
                                           - The cars from N and E are turning
                                             right

                     4.2.1.5.4 Four cars are approaching the intersection and:
                               - All four cars are turning right

             4.2.1.6 Cars approaching the intersection will use signals to
                     indicate whether they want to proceed straight, turn right,
                     or turn left. These signals will not be visible to the
                     user.
                     4.2.1.6.1 Cars approaching the intersection will be able to
                               access the signals of other cars that are either
                               already in the intersection or are also
                               approaching the intersection. This allows cars
                               to determine whether there is contention for
                               a slot in the cars' intended path.


         1         2         3         4         5         6         7         8
12345678901234567890123456789012345678901234567890123456789012345678901234567890

       4.2.2 Stop signs at intersections
             (don't put anything in this section for now, but have its heading)
       4.2.3 Traffic lights at intersections
             (don't put anything in this section for now, but have its heading)
       4.2.4 Sensors at intersections
             (don't put anything in this section for now, but have its heading)
       4.2.5 Implicit control devices at entrance to city section
             (don't put anything in this section for now, but have its heading)
       ...
       4.4.??
   4.3 Traffic flow
       4.3.1 Speed of traffic
             4.3.1.1 All cars travel at the same speed.
             That speed is given by timeToTraverseSegment.
       4.3.2 Patterns of traffic flow
             (don't try to do at all before the deadline on Fri Sep 21;
             eventually don't say something vague like "six or seven traffic
             patterns will define the traffic flow", instead describe --
             using *separate* outline numbering for each such pattern
             -- all the traffic flow patterns that exist in the simulation and
             thus are available to the user; you need not mention the various
             specific places where a car could actually make a turn)
        etc.
   4.4 Stochastic properties
       (describe the role of random numbers in the simulation)
   ...
   4.?? Additional assumptions
5. Input/Output
   (specific description of input and output formats and how the
   client will provide input and receive output; client has already indicated
   whether he wants a graphical view and/or GUI input and output to the overall
   software.)
6. Life Cycle Considerations
   6.1 Subsets
       6.1.1 (describe the first deliverable)
       The first subset reads in input from the commmand line or an input 
       file that describes the number of intersections in the simulation, the 
       number of cars in the simulation, and information about each car. The
       information about each car includes the row and column of the segment in 
       which the car is born, the direction of that segment, the direction the 
       car will turn, and the number of blocks the car will travel before 
       turning. The subset reads in the data line by line, printing a 
       description of each variable being read in before reading in that data.
       Finally, the subset prints a summary of the data read in. This summary
       describes the number of intersections in one direction, then the 
       number of cars, and finally prints a summary of each inputted car.
       6.1.2 (describe the second deliverable)
       The second subset allows cars to be placed within a 2D grid of 
       intersections according to the input processed in the first deliverable. 
       This subset considers top-level logic only, and simulates the movement of 
       cars through the grid of intersections during simulated time-steps. At 
       each time-step, the subset processes, updates the cars within, and prints 
       output for intersections in the following order:  
            left to right across lowest numbered row,
            left to right across next-to-lowest numbered row,
            ...
            left to right across highest numbered row.
       In updating the cars within each intersection, the subset removes cars 
       from queues of one intersection and places them into queues of another
       intersection according to specifications for that car which 
       specify the path the car will take. In processing each intersection, this 
       subset ignores the following things that will eventually be true in later 
       iterations: 
       - a car must remain in a lane for a certain length of time
       - a car can never move through an intersection within the same time-step
         that the car begins to move through the intersection
       - a lane has a maximum capacity of cars
       At each time-step, the subset prints a summary of the current state of 
       each intersection in the order specified above. For each intersection, 
       this summary includes whether the queues of that intersection 
       are empty and the status of each car in the intersection. The status of 
       a car contains information about how the car is updated in that 
       time-step, including removal from or addition to a queue, and removal 
       from the grid.
   6.2 Possible extensions
       (number and list the ways the software can be extended after Oct 31, in
       view of the client's longer-term needs)
   ...
   6.??
7. Glossary
   7.1 A "simulation" is a model or imitation of a real world process or
       environment.
   7.2 A "GUI", or a graphic user interface, is a display that allows the user
       to view graphical icons and visual indicators rather than just text.
   7.3 An "average" time in this program refers to the mean time cars take to
       cross through the entire simulated city. This average is calculated
       by summing up the times each car that has fully exited the city took to
       enter and exit the simulated city and dividing that sum by the total
       number of cars that have fully exited the simulated city. If no cars have
       fully exited the city, the program will display a message that no cars
       have exited the city.
   7.4 A "direction" is exactly one of the following: N, W, S, E.
       Those letters abbreviate North, West, South, East, respectively.
   7.5 A "section" is the part of a street between two adjacent
       intersections.
   7.6 Each section consists of exactly two segments that aim in opposite
       directions from each other.
   7.7 A "segment" is the part of a section going in a single direction.
   7.8 An "intersection" is where N/S and E/W facing roads intersect, and
       the segments end. An intersection is composed of four slots to form a 
       two-by-two Grid of slots. These four slots are defined as follows:
       7.8.1 NE intersection slot
             - The slot occupying the top right corner of the intersection.
       7.8.2 NW intersection slot
             - The slot occupying the top left corner of the intersection.
       7.8.3 SE intersection slot
             - The slot occupying the bottom right corner of the intersection.
       7.8.4 SW intersection slot
             - The slot occupying the bottom left corner of the intersection.
   7.9 A car that is "approaching the intersection" is a car that is in the
       slot adjacent to but not in the intersection and the car's direction is
       aiming toward the intersection.
   7.10 The "command line" is an all text display mode on a computer monitor
        that allows the user to enter commands and data.
   7.11 A "slot" refers to a portion of real estate that makes up a segment, or
        one of the four portions of an intersection. Only one car can occupy a
        slot at a time, and one car can only occupy one slot.
   7.12 Two segments "aim in opposite directions" if and only if exactly one of
        the following holds:
        7.12.1 One segment aims Northward, the other segment aims Southward
        7.12.2 One segment aims Eastward, the other segment aims Westward
   7.13 Cars that are approaching "perpendicular" to one another are approaching
        the intersection according to exactly one of these:
        7.13.1 One car is coming from N, and one car is coming from E.
        7.13.2 One car is coming from N, and one car is coming from W.
        7.13.3 One car is coming from S, and one car is coming from E.
        7.13.4 One car is coming from S, and one car is coming from W.
   7.14 A car that is "exiting the intersection" is a car that is in the slot
        adjacent to but not in the intersection and the car's direction is
        aiming away from the intersection.


8. Names of values.  (Below is at least a partial chart you can use.)

  name of value           intended meaning
  ---------------------   -----------------------------------------------------
  timeToTraverseSegment   time in time-units for one car to traverse one segment
  maxSegmentCapacity      maximum num of cars in one segment
  newVehicleProbability   the probability of a new car arriving at each entry
                          point
  numberOfIntersections   the number of intersections in the simulated city
  entryPoint              the segment through which a vehicle enters the
                          simulation
  exitPoint               the segment through which a vehicle exits the
                          simulation
  intendedDirection       direction the car will proceed in the intersection
  goStraight              value for intendedDirection for a car traveling
                          straight
  turnRight               value for intendedDirection for a car turning right
  turnLeft                value for intendedDirection for a car turning left
  timeTraveled            value associated with each vehicle that represents the
                          amount of time the vehicle has traveled within the
                          city
  timeLeftInSegment       time left in time-units for an instance of car to
                          traverse the current segment the car is occupying
  numBlocksBeforeTurning  the number of blocks (or segments) the car travels
                          past before the car turns at an intersection
  turnDirectionCode       integer representation of the direction the car is
                          turning at an intersection after traveling
                          blocksBeforeTurn blocks
  sumOfAllCarTimesToExit  the sum of the times all of the cars that have exited 
                          the grid have taken to exit the grid
  numCarsExited           the total number of cars that have exited the grid
  averageTimeToExit       the average time cars that have exited the grid have 
                          taken to exit the grid, calculated by dividing 
                          sumOfAllCarTimesToExit by numCarsExited

         1         2         3         4         5         6         7         8
12345678901234567890123456789012345678901234567890123456789012345678901234567890

9. Questions to ask client.