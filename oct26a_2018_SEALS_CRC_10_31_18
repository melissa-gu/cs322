

Authors: SEALS (Jessica, Melissa, Tracy, Will)

         1         2         3         4         5         6         7         8
12345678901234567890123456789012345678901234567890123456789012345678901234567890

The class name: Setup
Responsibility:
1. Read user input from a file or the command-line
2. Construct an instance of simulation based on the input
3. Run the simulation
Collaboration:
1. Simulation Class

The class name: Simulation
Responsibility:
1. Send message to grid to initialize instance of grid class with number of 
   intersections based on constructor parameters
2. Initialize instances of cars with the following variables for each car:
   2.1 Integer ID representing the car
   2.2 Integer representing the coordinate of the segment or intersection the 
       car is in, with the initial value specified by user input
   2.3 Initialize integer representing time left in a segment, 
       timeLeftInSegment, with the intial value of timeToTraverseSegment
   2.4 Initialize integer representing the direction (N,S,W,E) the car is
       aiming towards
3. Send message to instance of cars to update positions of cars and decrement
   the cars' timeToTraverseSegments appropriately
4. Calculate and output the average time each instance of car takes to enter and 
   exit the grid based on the messages received from grid instance
Collaboration:
1. Grid Class
2. Car Class
3. Setup Class

The class name: Grid
Responsibility:
1. Initialize 2D array of intersection instances, sending message to each 
   instance with an integer ID representing the intersection
2. Initialize instance of traffic controller
3. For all intersection instances, send message to TrafficController to update
   the state of each intersection
Collaboration:
1. Intersection Class
2. TrafficController Class

The class name: Intersection
Responsibility:
1. Initialize 2D integer array of size 4 representing the four slots within an 
   intersection that contains integer car IDs
2. Initialize four integer queues corresponding to four directions that contain 
   integer car IDs. Each queue represents list of cars occupying the segment 
   that aims towards the intersection, with timeLeftInSegment values equal to 
   zero
3. Receive message from car instances about direction car will proceed through 
   intersection
4. Receive message from traffic controller to dequeue cars that can move 
   into intersection 
5. Update the 2D array to reflect the movement of cars in the intersection
6. Receive messages from car instances about which queue to enqueue the car 
   into, and enqueue that car if the queue's size has not reached
   maxSegmentCapacity
Collaboration:
1. TrafficController Class
2. Car Class

The class name: Car
Responsibility:
1. Receive message from simulation at each time unit to decrement 
   timeLeftInSegment value at each time unit
2. Receive message from traffic controller about which queue car should enter
3. When timeLeftInSegment first becomes 0, send message to instance of 
   intersection corresponding to the car's intersection ID to enqueue the car in 
   the correct queue
Collaboration:
1. Simulation Class
2. Intersection Class
3. Traffic Controller Class


The class name: TrafficController
Responsibility:
1. Receive message from intersection containing information about which 
   slots of the 2D array are occupied
2. Receive message from intersection containing information about cars 
   approaching the intersection
3. Receive messages from car instances about each car's direction, and
   determines which queue to enqueue the car into after exiting the intersection
4. Determine which car(s) approaching intersection can move into the
   intersection based on:
   4.1. Whether the size of the queue to enqueue the car into after exiting the
        intersection is less than maxSegmentCapacity
   4.2. Rules specified in Requirements document
5. Send message to intersection to dequeue cars that can move into intersection 
   and update the 2D array
6. Send message to each car instance about which queue the car should enter
   after exiting the intersection
Collaboration:
1. Intersection Class
2. Car Class